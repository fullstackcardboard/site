!function(e){var t={};function a(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=e,a.c=t,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(r,i,function(t){return e[t]}.bind(null,i));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=2)}([function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));class r{save(e,t){window.localStorage.setItem(e,JSON.stringify(t))}load(e){return JSON.parse(window.localStorage.getItem(e))}clear(e){window.localStorage.removeItem(e)}}},,function(e,t,a){"use strict";a.r(t);var r={shuffle:function(e){for(let t=e.length-1;t>0;t--){let a=Math.floor(Math.random()*(t+1));[e[t],e[a]]=[e[a],e[t]]}},deepCopy:function(e){return JSON.parse(JSON.stringify(e))},findBootstrapEnvironment:function(){let e=["xs","sm","md","lg","xl"],t=document.createElement("div");document.body.appendChild(t);let a=e.shift();for(let r of e.reverse())if(t.classList.add(`d-${r}-none`),"none"===window.getComputedStyle(t).display){a=r;break}return document.body.removeChild(t),a}};const i=new class{preloadCardImages(e){for(let t=0;t<e.length;t++){const a=e[t];(new Image).src=a.frontImage,(new Image).src=a.rearImage}}};const d=new class{constructor(){this.currentEnvironment=r.findBootstrapEnvironment()}createCurrentCardTemplate(e){if(!e)return'<div id="currentCardImageContainer"></div>';return`<div class="text-center ${this.slideClass}" id="currentCardImageContainer"><img class="img-fluid round-corners" style="height: ${this.imageHeight}vh !important;" src="${e.frontImage}"/></div>`}createNextCardTemplate(e){if(!e)return'<div id="nextCardImageContainer"></div>';return`<div class="text-center" id="nextCardImageContainer"><img class="img-fluid round-corners" style="height: ${this.imageHeight}vh !important;" src="${e.rearImage}"/></div>`}get slideClass(){return"md"===this.currentEnvironment||"lg"===this.currentEnvironment||"xl"===this.currentEnvironment?"slide":"slide-mobile"}get imageHeight(){return"lg"===this.currentEnvironment||"xl"===this.currentEnvironment?50:30}};class n{constructor(e,t,a,r,i){this.id=e,this.frontImage=t,this.rearImage=a,this.instructions=r,this.group=i}}const s="/cards/dinosaurisland/content/images/",o=s+"back.png";var c={cards:[new n(1,s+"easy_1.png",o,"","easy"),new n(2,s+"easy_2.png",o,"","easy"),new n(3,s+"easy_3.png",o,"","easy"),new n(4,s+"easy_4.png",o,"","easy"),new n(5,s+"difficult_1.png",o,"","difficult"),new n(6,s+"difficult_2.png",o,"","difficult"),new n(7,s+"difficult_3.png",o,"","difficult"),new n(8,s+"difficult_4.png",o,"","difficult"),new n(9,s+"difficult_5.png",o,"","difficult"),new n(10,s+"difficult_6.png",o,"","difficult"),new n(11,s+"difficult_7.png",o,"","difficult"),new n(12,s+"difficult_8.png",o,"","difficult")]};const l=new(a(0).a),u="dinosaurisland";const h=new class{constructor(){this.cards=[],this.drawnCards=[],this.currentCard=null,this.nextCard=null,this.deckEmpty=!1}},f=new class{set(e){l.save(u,e)}clear(){l.clear(u)}getSavedState(){return l.load(u)}showLoadGameModal(){$("#loadModal").modal("show")}},g=new class{constructor(e){!function(e,t,a){t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a}(this,"buildDeck",()=>{const e=this.cardViewModel.cards.filter(e=>"easy"===e.group);r.shuffle(e);const t=e.slice(0,2),a=this.cardViewModel.cards.filter(e=>"difficult"===e.group);r.shuffle(a);const i=a.slice(0,7),d=t.concat(i);r.shuffle(d),this.cardViewModel.cards=d}),this.cardViewModel=e}}(h),w=new class{get currentCardContainer(){return document.getElementById("currentCard")}get nextCardContainer(){return document.getElementById("nextCard")}updateCardDisplay(e){if(this.toggleDrawButton(e),this.hideRailEraButton(e),e.deckEmpty&&e.era&&"rail"===e.era){document.querySelector("[data-action='newGame']").classList.remove("d-none")}else if(e.deckEmpty){document.querySelector("[data-action='newGame']").classList.remove("d-none")}this.currentCardContainer.innerHTML=d.createCurrentCardTemplate(e.currentCard),this.nextCardContainer.innerHTML=d.createNextCardTemplate(e.nextCard)}hideRailEraButton(e){"rail"===e.era&&document.querySelectorAll("[data-canal]").forEach(e=>e.classList.add("d-none"))}toggleDrawButton(e){const t=document.querySelector("[data-action=draw]");e.deckEmpty?(t.classList.add("disabled"),t.disabled=!0):(t.classList.remove("disabled"),t.disabled=!1)}showLoadGameModal(){$("#loadModal").modal("show")}toggleLoadingVisibility(){const e=document.getElementById("loading");e.classList.contains("d-none")?e.classList.remove("d-none"):e.classList.add("d-none")}toggleAppVisibility(){const e=document.getElementById("app");e.classList.contains("d-none")?e.classList.remove("d-none"):e.classList.add("d-none")}};new class{constructor(e,t,a,r,d){this.cardViewModel=d,this.gameState=a,this.deckBuilderCallback=r;i.preloadCardImages(e);const n=setInterval(a=>{"complete"===document.readyState&&(clearInterval(n),this.cardViewModel.cards=e,this.buildDeck(),this.cardView=t,this.bindEventHandlers(),this.cardView.toggleLoadingVisibility(),this.cardView.toggleAppVisibility(),this.updateCards(),this.updateView(),this.gameState.getSavedState()&&this.cardView.showLoadGameModal())},1e3)}drawNextCard(){this.cardViewModel.drawnCards.push(this.cardViewModel.cards[this.cardViewModel.cards.length-1]),this.updateCards(),this.cardViewModel.deckEmpty&&(this.cardViewModel.nextCard=null)}resetCards(){r.shuffle(this.cardViewModel.drawnCards),this.cardViewModel.cards=this.cardViewModel.cards.concat(r.deepCopy(this.cardViewModel.drawnCards)),this.cardViewModel.drawnCards=[]}updateCards(){this.cardViewModel.currentCard=this.cardViewModel.drawnCards[this.cardViewModel.drawnCards.length-1],this.cardViewModel.nextCard=this.cardViewModel.cards[this.cardViewModel.cards.length-1],this.cardViewModel.currentCard&&(this.cardViewModel.cards=this.cardViewModel.cards.filter(e=>e.id!=this.cardViewModel.currentCard.id)),this.cardViewModel.deckEmpty=0===this.cardViewModel.cards.length}updateView(){this.cardView.updateCardDisplay(this.cardViewModel)}buildDeck(){this.deckBuilderCallback()}bindEventHandlers(){document.addEventListener("click",e=>{if(e.target&&e.target.dataset&&e.target.dataset.action){const t=e.target.dataset.action;"draw"===t?(this.drawNextCard(),this.updateView(this.cardViewModel),this.gameState.set(this.cardViewModel)):"railEra"===t?(this.resetCards(),this.buildDeck(),this.updateCards(),this.cardViewModel.era="rail",this.updateView(),this.gameState.set(this.cardViewModel)):"load"===t?(this.cardViewModel=this.gameState.getSavedState(),this.updateView()):"newGame"===t&&(this.gameState.clear(),window.location.reload())}})}}(c.cards,w,f,g.buildDeck,h)}]);